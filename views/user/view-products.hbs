<section>
  <div class="modal fade" id="wishlistModal" tabindex="-1" aria-labelledby="wishlistModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="wishlistModalLabel">Wishlist Update</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Product has been added to your wishlist!
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
        </div>
      </div>
    </div>
  </div>
  <div class="head text-center">
    <h1>All Products</h1>
  </div>
  <div class="container mt-5">
    <div class="row">
      {{#each products}}
        <a href="/each-product/{{this._id}}" class="product-link">
          <div class="card product-card">
            <img class="card-img-top" src="/product-images/{{this._id}}.jpg" alt="Product Image" onerror="this.onerror=null;this.src='/product-images/placeholder.jpg';">
            
           <form action="/add-to-wishlist" method="POST" class="wishlist-form" id="wishlistForm-{{this._id}}">
  <input type="hidden" name="productId" value="{{this._id}}">
  <input type="hidden" name="productName" value="{{this.name}}">
  <input type="hidden" name="userId" value="{{user._id}}">
</form>

<a href="javascript:void(0);" onclick="addToWishlist('{{this._id}}', '{{this.productName}}')">
  <i class="fa-regular fa-heart fa-2xl" style="color: #f31b1b;"></i>
</a>


            
            <div class="card-body">
              <h3 class="card-title">{{this.name}}</h3>
              <h4>â‚¹ {{this.price}}</h4>
              <p class="card-text">{{this.category}}</p>
              <div class="add-to-cart-message" style="display: none;"></div>
              <div class="button-container">
                {{#if this.quantity}}
                  <form class="add-to-cart-form" method="POST" onsubmit="submitAddToCart(event, this)">
                    <input type="hidden" name="productId" value="{{this._id}}">
                    <input type="hidden" name="productName" value="{{this.name}}">
                    <input type="hidden" name="userId" value="{{user._id}}">
                    <button type="submit" class="add-to-cart btn btn-warning btn-block">ADD TO CART</button>
                  </form>
                {{else}}
                  <p class="out-of-stock">Out of Stock</p>
                {{/if}}
              </div>
            </div>
          </div>
        </a>
      {{/each}}
    </div>
  </div>
</section>

<style>
  <style>
  .product-link {
    display: block;
    text-decoration: none;
    color: black;
  }

  .product-link:hover,
  .product-link:focus,
  .product-link:active {
    text-decoration: none;
    color: black;
  }
  

 .product-card {
  margin-bottom: 2rem;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  overflow: hidden;
  text-align: center;
  width: 250px;
  height: 450px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  position: relative;
}

/* Hover Effect: Zoom + Shadow */
.product-card:hover {
  transform: scale(1.05); /* Slight zoom effect */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Enhanced shadow */
}

/* Hidden pop-up div inside card */
.hover-popup {
  position: absolute;
  bottom: -50px; /* Initially hidden below the card */
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.85);
  color: white;
  font-size: 14px;
  padding: 10px;
  border-radius: 5px;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.3s ease-in-out, bottom 0.3s ease-in-out;
  width: 80%;
  text-align: center;
}

/* Show pop-up on hover */
.product-card:hover .hover-popup {
  opacity: 1;
  bottom: 10px; /* Moves up into view */
}



  .product-card img {
    width: 100%;
    height: 260px;
    object-fit: contain;
    padding: 20px;
    border-radius: 5px;
  }

  .card-body {
    padding: 10px;
    flex-grow: 1;
  }

  .card-title {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .card-text {
    font-size: 0.9rem;
    color: #666;
  }

  .button-container {
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .out-of-stock {
    color: #ff0000;
    font-weight: bold;
    font-size: 16px;
    text-align: center;
  }

  .add-to-cart {
    background-color: #e6b800;
    color: black;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s;
    width: 100%;
  }

  .add-to-cart:hover {
    background-color: #cc9a00;
  }

  .add-to-cart-message {
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #4CAF50;
    color: white;
    font-size: 14px;
    padding: 5px 10px;
    border-radius: 4px;
    z-index: 1;
    display: none; /* Hidden by default */
  }

  .row {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }

  .btn-link {
    width: 100%;
  }

  .wishlist-icon {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    color: #bbb;
    cursor: pointer;
    transition: color 0.3s ease;
  }

  .wishlist-icon.active {
    color: red;
  }

  .wishlist-btn {
  display: inline-block;
  background-color: #f44336;
  color: white;
  padding: 10px 20px;
  font-size: 16px;
  border-radius: 4px;
  cursor: pointer;
}

.wishlist-btn:hover {
  background-color: #d32f2f;
}

/* Add to Cart Alert - Yellow/Orange Theme */
.cart-alert {
    background-color: #ffcc00 !important; /* Yellow */
    color: #333 !important; /* Dark Text */
    font-weight: bold;
    border-radius: 10px;
}

/* Wishlist Alert - Red/Pink Theme */
.wishlist-alert {
    background-color: #ff4d4d !important; /* Red */
    color: white !important;
    font-weight: bold;
    border-radius: 10px;
}


</style>

</style>
<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Function to display SweetAlert2 notifications with different styles
function showAlert(iconType, alertMessage, alertType) {
    let customClass = alertType === "cart" ? "cart-alert" : "wishlist-alert";

    Swal.fire({
        toast: true,
        position: "top",
        icon: iconType,
        title: alertMessage,
        showConfirmButton: false,
        timer: 2500,
        timerProgressBar: true,
        customClass: {
            popup: customClass // Apply different styles
        }
    });
}

// Add to Cart Function
function submitAddToCart(event, form) {
    event.preventDefault();
    const formData = new FormData(form);

    fetch("/addtocart", {
        method: "POST",
        body: formData,
    })
    .then(response => response.json())
    .then(data => {
        let iconType = "success";
        let alertMessage = "Added to cart successfully!";

        if (data.error) {
            iconType = "error";
            alertMessage = data.error;
        } else if (data.showAlert) { // If already in cart
            iconType = "info";
            alertMessage = data.message;
        } else if (data.successMessage) {
            alertMessage = data.successMessage;
        }

        showAlert(iconType, alertMessage, "cart");
    })
    .catch(error => {
        console.error("Error adding to cart:", error);
        showAlert("error", "An error occurred. Please try again.", "cart");
    });
}

// Add to Wishlist Function
function addToWishlist(productId, productName) {
    fetch('/add-to-wishlist', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, productName })
    })
    .then(response => response.json())
    .then(data => {
        let iconType = "success";
        let alertMessage = `Added "${productName}" to wishlist`;

        if (data.message.includes("already in wishlist")) {
            iconType = "info";  
            alertMessage = `"${productName}" is already in your wishlist`;
        } else if (data.message.includes("removed")) {
            iconType = "warning";  
            alertMessage = `Removed "${productName}" from wishlist`;
        }

        showAlert(iconType, alertMessage, "wishlist");
    })
    .catch(error => {
        console.error("Error:", error);
        showAlert("error", "An error occurred. Please try again.", "wishlist");
    });
}

</script>
