<div class="container mt-5">
  <h2 class="text-center mb-4">Your Cart</h2>
  <div class="table-responsive">
    {{#if products.length}}
    <table class="table table-striped table-bordered table-hover text-center">
      <thead class="thead-dark">
        <tr>
          <th scope="col">Image</th>
          <th scope="col">Name</th>
          <th scope="col">Quantity</th>
          <th scope="col">Price</th>
          <th scope="col">Total</th>
          <th scope="col">Action</th>
        </tr>
      </thead>
      <tbody>
        {{#each products}}
        <tr data-product-id="{{this._id}}" data-price="{{this.price}}">
          <td>
            <img
              src="{{this.imagePath}}"
              alt="{{this.name}}"
              class="cart-product-image img-thumbnail"
            />
          </td>
          <td>{{this.name}}</td>
          <td>
            <div class="input-group quantity-group">
              <button class="btn btn-sm btn-outline-secondary decrement-btn" type="button">-</button>
              &nbsp;&nbsp;
              <input
                type="number"
                value="{{this.quantity}}"
                min="1"
                class="form-control quantity-input text-center"
              />
              &nbsp;&nbsp;
              <button class="btn btn-sm btn-outline-secondary increment-btn" type="button">+</button>
            </div>
          </td>
          <td>₹{{this.price}}</td>
          <td class="product-total">₹{{this.total}}</td>
          <td>
            <form action="/cart-remove" method="POST">
              <input type="hidden" name="productId" value="{{this._id}}" />
              <button type="submit" class="btn btn-danger btn-sm">Remove</button>
            </form>
          </td>
        </tr>
        {{/each}}
      </tbody>
      <tfoot>
        <tr class="table-primary">
          <td colspan="4" class="text-right"><strong>Total Price</strong></td>
          <td colspan="2" id="grandTotal">₹{{totalPrice}}</td>
        </tr>
      </tfoot>
    </table>

    <!-- Proceed to Payment Button -->
    <div class="text-right">
      <form action="/payment" method="POST">
        <input type="hidden" name="cartDetails" id="cartDetailsInput" />
        <button type="submit" class="btn btn-primary btn-lg">Proceed to Payment</button>
      </form>
    </div>
    {{else}}
    <!-- Message when no items are in the cart -->
    <div class="text-center mt-5">
      <h4>Your cart is empty. Add items to your cart to proceed.</h4>
      <a href="/" class="btn btn-primary mt-3">Go Shopping</a>
    </div>
    {{/if}}
  </div>
</div>


<style>
  .cart-product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 8px;
  }

  .quantity-group {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity-input {
    width: 60px;
    text-align: center;
  }

  .table {
    table-layout: fixed;
    width: 100%;
  }

  .table td,
  .table th {
    vertical-align: middle;
    padding: 10px;
  }

  .table-responsive {
    overflow-x: auto;
  }

  .input-group {
    width: 120px;
  }

  .btn-sm {
    padding: 0.25rem 0.5rem;
  }

  .product-total {
    font-weight: bold;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const cartDetails = [];

  const updateTotals = () => {
    let grandTotal = 0;

    document.querySelectorAll("tbody tr").forEach((row) => {
      const price = parseFloat(row.dataset.price);
      const quantity = parseInt(row.querySelector(".quantity-input").value);
      const totalElement = row.querySelector(".product-total");
      const total = price * quantity;

      totalElement.textContent = `₹${total.toFixed(2)}`;
      grandTotal += total;

      const productId = row.dataset.productId;
      const name = row.querySelector("td:nth-child(2)").textContent.trim();

      let product = cartDetails.find((item) => item.productId === productId);
      if (product) {
        product.quantity = quantity;
        product.total = total;
      } else {
        cartDetails.push({
          productId,
          name,
          price,
          quantity,
          total,
        });
      }
    });

    document.getElementById("grandTotal").textContent = `₹${grandTotal.toFixed(2)}`;
  };

  // Increase quantity
  document.querySelectorAll(".increment-btn").forEach((button) => {
    button.addEventListener("click", (event) => {
      const quantityInput = event.target.closest("tr").querySelector(".quantity-input");
      quantityInput.value = parseInt(quantityInput.value) + 1;
      updateTotals();
    });
  });

  // Decrease quantity
  document.querySelectorAll(".decrement-btn").forEach((button) => {
    button.addEventListener("click", (event) => {
      const quantityInput = event.target.closest("tr").querySelector(".quantity-input");
      if (parseInt(quantityInput.value) > 1) {
        quantityInput.value = parseInt(quantityInput.value) - 1;
        updateTotals();
      }
    });
  });

  // Handle quantity input changes
  document.querySelectorAll(".quantity-input").forEach((input) => {
    input.addEventListener("change", () => {
      if (parseInt(input.value) < 1) input.value = 1;
      updateTotals();
    });
  });

  // Remove product from cart
  document.querySelectorAll('form[action="/cart-remove"]').forEach((form) => {
    form.addEventListener("submit", (event) => {
      event.preventDefault(); // Prevent the form from reloading the page

      const row = event.target.closest("tr");
      const productId = row.dataset.productId;

      fetch("/cart-remove", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ productId }),
      })
        .then((response) => response.text())
        .then(() => {
          // Remove the row from the table
          row.remove();
          // Update totals
          updateTotals();
        })
        .catch((error) => {
          console.error("Error removing product:", error);
        });
    });
  });

  const paymentForm = document.querySelector('form[action="/payment"]');
  paymentForm.addEventListener("submit", () => {
    const cartDetailsInput = document.getElementById("cartDetailsInput");
    cartDetailsInput.value = JSON.stringify(cartDetails);
  });

  // Initialize totals
  updateTotals();
});

</script>
